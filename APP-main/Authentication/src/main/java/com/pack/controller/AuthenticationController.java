package com.pack.controller;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.google.gson.Gson;
import com.pack.exception.UserNotFoundException;
import com.pack.model.UserLogin;
import com.pack.service.AuthenticationService;
import com.pack.config.JWTTokenGenerator;

@RestController
@RequestMapping("/auth")
@CrossOrigin
public class AuthenticationController {
	
	Logger logger=LoggerFactory.getLogger(AuthenticationController.class);

	private AuthenticationService authenticationService;
	private JWTTokenGenerator jwtTokenGenerator;
	ResponseEntity<?> responseEntity;

	@Autowired
	Gson gson;

	@Autowired
	public AuthenticationController(AuthenticationService authenticationService, JWTTokenGenerator jwtTokenGenerator) {
		this.authenticationService = authenticationService;
		this.jwtTokenGenerator = jwtTokenGenerator;
	}

	@PostMapping("/login")
	public ResponseEntity<?> loginUser(@RequestBody UserLogin user) throws UserNotFoundException {
		logger.info("credentials {} {}",user.getUserId(),user.getPassword());
		UserLogin userDetails = authenticationService.getUser(user);
		/*
		 * Create ResponseEntity with token generated by calling generateToken method of
		 * JwtTokenGenerator
		 */
		jwtTokenGenerator.generateToken(userDetails);
		//logger.info("User logged in and token generated successfully");
		return new ResponseEntity<>(jwtTokenGenerator.generateToken(userDetails), HttpStatus.CREATED);
	}
}
